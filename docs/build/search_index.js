var documenterSearchIndex = {"docs":
[{"location":"helperfunctions/","page":"Helper Functions","title":"Helper Functions","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"helperfunctions/#Helper-Functions","page":"Helper Functions","title":"Helper Functions","text":"","category":"section"},{"location":"helperfunctions/","page":"Helper Functions","title":"Helper Functions","text":"These are subroutines that need to be used multiple times, but don't seem important  enough to be their own function at the moment. Some of them may one day deserve to be promoted to proper functions in the future.","category":"page"},{"location":"helperfunctions/","page":"Helper Functions","title":"Helper Functions","text":"    _makereal\n    _depolkraus\n    _transposekraus\n    _parallelchan","category":"page"},{"location":"helperfunctions/#OperatorMonotoneCorrelationTools._makereal","page":"Helper Functions","title":"OperatorMonotoneCorrelationTools._makereal","text":"_makereal(x :: Vector, tol=1e-10)\n\nEigenvalues need to be real, but numerical methods sometimes have some small error.  This checks if there will be an issue and if there won't be, it returns the vector with real elements.\n\n\n\n\n\n","category":"function"},{"location":"helperfunctions/#OperatorMonotoneCorrelationTools._depolkraus","page":"Helper Functions","title":"OperatorMonotoneCorrelationTools._depolkraus","text":"_depolkraus(q)\n\nThis function returns the Kraus operators of the qubit depolarizing channel with parameter q\n\n\n\n\n\n","category":"function"},{"location":"helperfunctions/#OperatorMonotoneCorrelationTools._transposekraus","page":"Helper Functions","title":"OperatorMonotoneCorrelationTools._transposekraus","text":"_transposekraus(d)\n\nThis function returns the Kraus operators for the transpose map acting on dimension d\n\n\n\n\n\n","category":"function"},{"location":"helperfunctions/#OperatorMonotoneCorrelationTools._parallelchan","page":"Helper Functions","title":"OperatorMonotoneCorrelationTools._parallelchan","text":"_parallelchan(Ak,Bk)\n\nThis function returns the Kraus operators of a channel being ran twice in parallel.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"joperatorfunctions/#J_{f,\\\\sigma-}{p}-Functions","page":"JOperator Functions","title":"J_fsigma ^p Functions","text":"","category":"section"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"These functions calculate quantities directly relevant to or induced by the J_fsigma^p Operator.","category":"page"},{"location":"joperatorfunctions/#Direct-Functions-of-J_{f,\\\\sigma-}{p}","page":"JOperator Functions","title":"Direct Functions of J_fsigma ^p","text":"","category":"section"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"Jfpsigma\nJfpsigmachoi\ninnerproductf","category":"page"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.Jfpsigma","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.Jfpsigma","text":"Jfpsigma(Y,sigma,p,f,f0,fpinf)\n\nThis function computes mathbfJ_fsigma^p(Y). It expects the input in the  computational basis and returns the matrix in the computational basis.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.Jfpsigmachoi","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.Jfpsigmachoi","text":"Jfpsigmachoi(σ,p,f,f0,fpinf)\n\nThis function returns the Choi operator of mathbfJ_fsigma^p We note this has a specific function for obtaining the Choi operator to force the user to consider pff(0+)f(+inf)\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.innerproductf","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.innerproductf","text":"innerproductf(X,Y,sigma,p,f,f0,fpinf)\n\nThis function computes langle X  Y rangle_mathbfJ^p_fsigma. Note that it does not check the function f is an operator monotone function.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#Contraction-Coefficient-Functions","page":"JOperator Functions","title":"Contraction Coefficient Functions","text":"","category":"section"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"SchReversalMap\ngetcontractioncoeff","category":"page"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.SchReversalMap","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.SchReversalMap","text":"SchReversalMap(X,Ak,Bk,σ,f,f0,fpinf)\n\nApplies the Schrodinger reversal map to X according to f,mathcalE, and σ  mathcalE is presumed to be provided in its Kraus operator form. It is assumed all inputs are expressed in the computational basis.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.getcontractioncoeff","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.getcontractioncoeff","text":"getcontractioncoeff(Ak, Bk, σ, f, f0, fpinf)\n\nThis returns the contraction coefficient eta_chi^2_f(mathcalEsigma)  for a full rank input state sigma and symmetric-inducing operator monotone function f\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#Maximal-Correlation-Coefficients","page":"JOperator Functions","title":"Maximal Correlation Coefficients","text":"","category":"section"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"qmaxcorrcoeff\nqmaxlincorrcoeff","category":"page"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.qmaxcorrcoeff","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.qmaxcorrcoeff","text":"qmaxcorrcoeff(ρA::Matrix, Ak::Vector, Bk::Vector, f, f0, fpinf)\n\nThis function computes the maximal correlation coefficient mu_f(rho_AB) when given rho_A and the Kraus operators of mathcalE such that  rho_AB = (textid_A otimes mathcalE)(psi_rho_A) where psi_rho_A is the canonical purification of rho_A.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.qmaxlincorrcoeff","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.qmaxlincorrcoeff","text":"qmaxlincorrcoeff(ρA::Matrix, Ak::Vector, Bk::Vector,k)\n\nThis function computes the maximal correlation coefficient mu_f_k(rho_AB) for f_k(x) = x^k Currently it requires that it is given rho_A and  the Kraus operators of mathcalE such that  rho_AB = (textid_A otimes mathcalE)(psi_rho_A) where psi_rho_A is the canonical purification of rho_A.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#Ancillary-Functions","page":"JOperator Functions","title":"Ancillary Functions","text":"","category":"section"},{"location":"joperatorfunctions/","page":"JOperator Functions","title":"JOperator Functions","text":"perspective\ngetONB","category":"page"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.perspective","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.perspective","text":"perspective(x,y,f,f0,fpinf)\n\nFor a given function f, this computes the perspective function \n\n    P_f(xy) coloneqq begincases\n        yf(xy)  xy  0   \n        yf(0^+)  x = 0  \n        xf(+infty)  y = 0 \n    endcases\n\nwhere 0f(00) coloneqq 0, 0cdot infty coloneqq 0,\n\n    f(0^+) coloneqq lim_x downarrow 0 f(x)   quad textand quad f(+infty) coloneqq lim_x to +infty fracf(x)x  \n\nWe note that we allow one to control f0 and fpinf. The function will not work if these values are wrong.  We assume you will put Inf (resp. -Inf) if f0 or fpinf is infinite.\n\n\n\n\n\n","category":"function"},{"location":"joperatorfunctions/#OperatorMonotoneCorrelationTools.getONB","page":"JOperator Functions","title":"OperatorMonotoneCorrelationTools.getONB","text":"getONB(σ,p,f,f0,fpinf)\n\nThis function performs the (modified) Gram Schmidt process for the  inner product spaces langle XY rangle_mathbfJ_fsigma^p considered in the paper. \n\nNote inputs need to be in computational basis and are returned in computational basis  as the inner product value is a number and thus does not change the basis here.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/","page":"Basic Functions","title":"Basic Functions","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"basicfunctions/#Basic-Functions","page":"Basic Functions","title":"Basic Functions","text":"","category":"section"},{"location":"basicfunctions/","page":"Basic Functions","title":"Basic Functions","text":"These functions are common, general use calculations one needs to do.","category":"page"},{"location":"basicfunctions/#Linear-Algebraic-Operations","page":"Basic Functions","title":"Linear Algebraic Operations","text":"","category":"section"},{"location":"basicfunctions/","page":"Basic Functions","title":"Basic Functions","text":"    isPSD\n    partialtrace\n    basischange\n    returntocompunitary\n    swapoperator","category":"page"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.isPSD","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.isPSD","text":"isPSD(X)\n\nReturns true if X is a positive semidefinite operator.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.partialtrace","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.partialtrace","text":"partialtrace(ρ,dA,dB,sys)\n\nThis function computes the partial trace on a bipartite state rho_AB. If sys = 1, it traces over the A system and otherwise the B system.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.basischange","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.basischange","text":"basischange(A,B)\n\nExpresses a square linear operator A in the eigenbasis of B where the eigenbasis is expressed with the k-th eigenvector corresponding to the k-th largest eigenvalue of B.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.returntocompunitary","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.returntocompunitary","text":"returntocompunitary(A)\n\nGiven A in the computational basis, this returns the unitary U such that it takes the eigenbasis of A to the computational basis. This is for taking matrices written in the eigenbasis of A back to the computational basis.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.swapoperator","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.swapoperator","text":"swapoperator(d)\n\nReturns the swap operator mathbbF = sum_ij in d vert i langle rangle j vert otimes vert j langle rangle i vert  where d denotes the dimension.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#Channel-Operations","page":"Basic Functions","title":"Channel Operations","text":"","category":"section"},{"location":"basicfunctions/","page":"Basic Functions","title":"Basic Functions","text":"    choitokraus\n    krausaction\n    WernerHolevochoi","category":"page"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.choitokraus","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.choitokraus","text":"choitokraus(choi,dA,dB)\n\nConverts a Choi operator of a linear map to its Kraus representation. The identity relies on the vec mapping in the computational bases: vecvert j rangle_B langle i vert_A to langle i vert_A langle j vert _B. This is equivalent to stacking columns of the matrix on top of each other, which is the vec mapping for Julia.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.krausaction","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.krausaction","text":"krausaction(Ak,Bk,input)\n\nImplements the action of a linear map Phi_A to B given its Kraus operators A_kB_k_k, i.e.  Phi(X) = sum_k A_kXB_k^ast.\n\n\n\n\n\n","category":"function"},{"location":"basicfunctions/#OperatorMonotoneCorrelationTools.WernerHolevochoi","page":"Basic Functions","title":"OperatorMonotoneCorrelationTools.WernerHolevochoi","text":"WernerHolevochoi(d,q)\n\nReturns the Choi operator of the Werner-Holevo channel  with parameter q acting on a d-dimensional space:  mathcalW_q = (1-q) mathcalW_sym + q mathcalW_as\n\n\n\n\n\n","category":"function"},{"location":"randomobjects/","page":"Random Objects","title":"Random Objects","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"randomobjects/#Random-Objects","page":"Random Objects","title":"Random Objects","text":"","category":"section"},{"location":"randomobjects/","page":"Random Objects","title":"Random Objects","text":"These functions generate random instances of certain quantum objects.","category":"page"},{"location":"randomobjects/","page":"Random Objects","title":"Random Objects","text":"    Haarrandomunitary\n    hsrandomstate\n    randomquantumchannel","category":"page"},{"location":"randomobjects/#OperatorMonotoneCorrelationTools.Haarrandomunitary","page":"Random Objects","title":"OperatorMonotoneCorrelationTools.Haarrandomunitary","text":"RandomUnitary(d)\n\nThis function returns a unitary of dimension d according to the Haar measure. The construction follows \"How to generate a random unitary matrix\" by Maris Ozols.\n\n\n\n\n\n","category":"function"},{"location":"randomobjects/#OperatorMonotoneCorrelationTools.hsrandomstate","page":"Random Objects","title":"OperatorMonotoneCorrelationTools.hsrandomstate","text":"hsrandomstate(d::Int,k::Int=d, re=false)\n\nDraws a density matrix according to the mu_nk  distribution. The method of construction follows Lemma 1 of \"Asymptotics of random density matrices\" by Ion Nechita. In the case the variable re is set to true, the function generates a random state with only real entries. No analytic structure about this measure is guaranteed.\n\n\n\n\n\n","category":"function"},{"location":"randomobjects/#OperatorMonotoneCorrelationTools.randomquantumchannel","page":"Random Objects","title":"OperatorMonotoneCorrelationTools.randomquantumchannel","text":"randomquantumchannel(dA,dB)\n\nReturns the Choi state of a randomquantum channel by drawing rho_AB according to the Hilbert-Schmidt measure and then returning rho_A^-12rho_ABrho_A^-12. If re is set to true, it generates the quantum channel from a quantum state with real values.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"#OperatorMonotoneCorrelationTools","page":"Home","title":"OperatorMonotoneCorrelationTools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for the OperatorMonotoneCorrelationTools.jl package. ","category":"page"},{"location":"commonsetgenerators/","page":"Common Set Generators","title":"Common Set Generators","text":"CurrentModule = OperatorMonotoneCorrelationTools","category":"page"},{"location":"commonsetgenerators/#Common-Set-Generators","page":"Common Set Generators","title":"Common Set Generators","text":"","category":"section"},{"location":"commonsetgenerators/","page":"Common Set Generators","title":"Common Set Generators","text":"These functions are for generating sets of vectors or linear operators that one often needs.","category":"page"},{"location":"commonsetgenerators/","page":"Common Set Generators","title":"Common Set Generators","text":"    gencompbasis\n    genNormDiscWeyl\n    genGellMann","category":"page"},{"location":"commonsetgenerators/#OperatorMonotoneCorrelationTools.gencompbasis","page":"Common Set Generators","title":"OperatorMonotoneCorrelationTools.gencompbasis","text":"gencompbasis(d)\n\nThis function returns the computational basis of dimension d.\n\n\n\n\n\n","category":"function"},{"location":"commonsetgenerators/#OperatorMonotoneCorrelationTools.genNormDiscWeyl","page":"Common Set Generators","title":"OperatorMonotoneCorrelationTools.genNormDiscWeyl","text":"genNormDiscWeyl(d)\n\nThis function returns the normalized discrete Weyl operators for dimension d.\n\n\n\n\n\n","category":"function"},{"location":"commonsetgenerators/#OperatorMonotoneCorrelationTools.genGellMann","page":"Common Set Generators","title":"OperatorMonotoneCorrelationTools.genGellMann","text":"genGellMan(d)\n\nThis function constructs and returns the generalized Gell Mann matrices for dimension d.\n\n\n\n\n\n","category":"function"}]
}
